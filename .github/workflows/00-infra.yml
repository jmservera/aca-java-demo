name: 01-Infra

on:
  workflow_call:
  
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    env:
      ACA_NAME: ${{secrets.ACA_NAME}}
      ACA_SUBSCRIPTION_ID: ${{secrets.ACA_SUBSCRIPTION_ID}}
      ACA_RESOURCE_GROUP: ${{secrets.ACA_RESOURCE_GROUP}}
      PGSQL_SUBSCRIPTION_ID: ${{secrets.PGSQL_SUBSCRIPTION_ID || secrets.ACA_SUBSCRIPTION_ID}}
      PGSQL_RESOURCE_GROUP: ${{secrets.PGSQL_RESOURCE_GROUP || secrets.ACA_RESOURCE_GROUP}}
      CONTAINER_REGISTRY_SUBSCRIPTION_ID: ${{secrets.CONTAINER_REGISTRY_SUBSCRIPTION_ID || secrets.ACA_SUBSCRIPTION_ID}}
      CONTAINER_REGISTRY_RESOURCE_GROUP: ${{secrets.CONTAINER_REGISTRY_RESOURCE_GROUP || secrets.ACA_RESOURCE_GROUP}}
      LOG_ANALYTICS_WRKSPC_SUBSCRIPTION_ID: ${{secrets.LOG_ANALYTICS_WRKSPC_SUBSCRIPTION_ID || secrets.ACA_SUBSCRIPTION_ID}}
      LOG_ANALYTICS_WRKSPC_RESOURCE_GROUP: ${{secrets.LOG_ANALYTICS_WRKSPC_RESOURCE_GROUP || secrets.ACA_RESOURCE_GROUP}}
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure login in ACA Subscription # https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure
        uses: azure/login@v2
        with:
          client-id: "${{secrets.AAD_CLIENT_ID}}"
          tenant-id: "${{secrets.AAD_TENANT_ID}}"
          subscription-id: "${{env.ACA_SUBSCRIPTION_ID}}"

      - name: Create Azure resource groups
        working-directory: ./scripts/deployment/templates/bicep/
        run: |
            az deployment sub create \
              -l "${{secrets.AZURE_LOCATION}}" \
              --template-file ./resource_groups.bicep \
              --parameters location="${{secrets.AZURE_LOCATION}}" \
                           acaRG="${{env.ACA_RESOURCE_GROUP}}" \
                           acaTags="${{vars.ACA_RESOURCE_TAGS}}" \
                           containerRegistrySubscriptionId="${{env.CONTAINER_REGISTRY_SUBSCRIPTION_ID}}" \
                           containerRegistryRG="${{env.CONTAINER_REGISTRY_RESOURCE_GROUP}}" \
                           containerRegistryTags="${{vars.CONTAINER_REGISTRY_RESOURCE_TAGS}}" \
                           pgsqlSubscriptionId="${{env.PGSQL_SUBSCRIPTION_ID}}" \
                           pgsqlRG="${{env.PGSQL_RESOURCE_GROUP}}" \
                           pgsqlTags="${{vars.PGSQL_RESOURCE_TAGS}}" \
                           logAnalyticsSubscriptionId="${{env.LOG_ANALYTICS_WRKSPC_SUBSCRIPTION_ID}}" \
                           logAnalyticsRG="${{env.LOG_ANALYTICS_WRKSPC_RESOURCE_GROUP}}" \
                           logAnalyticsTags="${{vars.LOG_ANALYTICS_WRKSPC_RESOURCE_TAGS}}"
        
      - name: Deploy Azure resources
        id: deployment
        working-directory: ./scripts/deployment/templates/bicep/
        run: |
          if [[ -z "${{secrets.DBA_GROUP_NAME}}" ]]; then
            echo "DBA Group name is not set"
            exit 1
          fi

          dbaGroupId=`az ad group show --group "${{secrets.DBA_GROUP_NAME}}" --query '[id]' -o tsv`
          echo "DBA_GROUP_ID=${dbaGroupId}" >> $GITHUB_OUTPUT

          echo "Deploying with the following parameters:"
          echo "DBA Group Name: '${{secrets.DBA_GROUP_NAME}}'"
          echo "DBA Group Id: $dbaGroupId"
          echo "ACA Service name: '${{env.ACA_NAME}}'"
          echo "Deployment client IP Address: '${clientIP}'"
          
          # As all is deployed using the template, I will not need an exception for the current
          # GH Runner IP Address
          export clientIP=""
          deploymentOutput=`az deployment group create \
                                        --resource-group ${{env.ACA_RESOURCE_GROUP}} \
                                        --template-file ./main.bicep \
                                        --parameters acaName="${{env.ACA_NAME}}" \
                                                     acaTags="${{vars.ACA_RESOURCE_TAGS}}" \
                                                     containerRegistryName="${{secrets.CONTAINER_REGISTRY_NAME}}" \
                                                     containerRegistrySubscriptionId="${{env.CONTAINER_REGISTRY_SUBSCRIPTION_ID}}" \
                                                     containerRegistryRG="${{env.CONTAINER_REGISTRY_RESOURCE_GROUP}}" \
                                                     containerRegistryTags="${{vars.CONTAINER_REGISTRY_RESOURCE_TAGS}}" \
                                                     dnsZoneName="${{secrets.DNS_ZONE_NAME}}" \
                                                     parentDnsZoneName="${{secrets.PARENT_DNS_ZONE_NAME}}" \
                                                     parentDnsZoneSubscriptionId="${{secrets.PARENT_DNS_SUBSCRIPTION_ID}}" \
                                                     parentDnsZoneRG="${{secrets.PARENT_DNS_ZONE_RESOURCE_GROUP}}" \
                                                     parentDnsZoneTags="${{vars.PARENT_DNS_ZONE_TAGS}}" \
                                                     petClinicDnsZoneName="${{vars.PET_CLINIC_DNS_ZONE_NAME}}" \
                                                     pgsqlName="${{secrets.PGSQL_NAME}}" \
                                                     pgsqlAADAdminGroupName="${{secrets.DBA_GROUP_NAME}}" \
                                                     pgsqlAADAdminGroupObjectId="${dbaGroupId}" \
                                                     pgsqlSubscriptionId="${{env.PGSQL_SUBSCRIPTION_ID}}" \
                                                     pgsqlRG="${{secrets.PGSQL_RESOURCE_GROUP}}" \
                                                     pgsqlPetClinicDbName="${{secrets.PET_CLINIC_DB_NAME}}" \
                                                     petClinicCustsSvcDbUserName="${{secrets.PET_CLINIC_CUSTS_SVC_DB_USER_NAME}}" \
                                                     petClinicVetsSvcDbUserName="${{secrets.PET_CLINIC_VETS_SVC_DB_USER_NAME}}" \
                                                     petClinicVisitsSvcDbUserName="${{secrets.PET_CLINIC_VISITS_SVC_DB_USER_NAME}}" \
                                                     pgsqlTodoAppDbName="${{secrets.TODO_APP_DB_NAME}}" \
                                                     todoAppDbUserName="${{secrets.TODO_APP_DB_USER_NAME}}" \
                                                     pgsqlTags="${{vars.PGSQL_RESOURCE_TAGS}}" \
                                                     logAnalyticsName="${{secrets.LOG_ANALYTICS_WRKSPC_NAME}}" \
                                                     logAnalyticsSubscriptionId="${{env.LOG_ANALYTICS_WRKSPC_SUBSCRIPTION_ID}}" \
                                                     logAnalyticsRG="${{env.LOG_ANALYTICS_WRKSPC_RESOURCE_GROUP}}" \
                                                     logAnalyticsTags="${{vars.LOG_ANALYTICS_WRKSPC_RESOURCE_TAGS}}" \
                                                     petClinicGitConfigRepoUri="${{vars.PET_CLINIC_GIT_CONFIG_REPO_URI}}" \
                                                     petClinicGitConfigRepoUserName="${{secrets.PET_CLINIC_GIT_CONFIG_REPO_USERNAME}}" \
                                                     petClinicGitConfigRepoPassword="${{secrets.PET_CLINIC_GIT_CONFIG_REPO_PASSWORD}}"
          
          #azurerm_kubernetes_cluster.aks.network_profile[0].load_balancer_profile[0].effective_outbound_ips

          todoAppUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.todoAppUserManagedIdentityName.value"`
          todoAppUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.todoAppUserManagedIdentityPrincipalId.value"`
          todoAppUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.todoAppUserManagedIdentityClientId.value"`
          todoAppDbUserName=`echo $deploymentOutput|jq ".properties.outputs.todoAppDbUserName.value"`

          petClinicAppUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.petClinicAppUserManagedIdentityName.value"`
          petClinicAppUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.petClinicAppUserManagedIdentityPrincipalId.value"`
          petClinicAppUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.petClinicAppUserManagedIdentityClientId.value"`

          petClinicConfigSvcUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.petClinicConfigSvcUserManagedIdentityName.value"`
          petClinicConfigSvcUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.petClinicConfigSvcUserManagedIdentityPrincipalId.value"`
          petClinicConfigSvcUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.petClinicConfigSvcUserManagedIdentityClientId.value"`

          petClinicCustsSvcUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.petClinicCustsSvcUserManagedIdentityName.value"`
          petClinicCustsSvcUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.petClinicCustsSvcUserManagedIdentityPrincipalId.value"`
          petClinicCustsSvcUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.petClinicCustsSvcUserManagedIdentityClientId.value"`
          petClinicCustsSvcDbUserName=`echo $deploymentOutput|jq ".properties.outputs.petClinicCustsSvcDbUserName.value"`

          petClinicVetsSvcUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.petClinicVetsSvcUserManagedIdentityName.value"`
          petClinicVetsSvcUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.petClinicVetsSvcUserManagedIdentityPrincipalId.value"`
          petClinicVetsSvcUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.petClinicVetsSvcUserManagedIdentityClientId.value"`
          petClinicVetsSvcDbUserName=`echo $deploymentOutput|jq ".properties.outputs.petClinicVetsSvcDbUserName.value"`

          petClinicVisitsSvcUserManagedIdentityName=`echo $deploymentOutput|jq ".properties.outputs.petClinicVisitsSvcUserManagedIdentityName.value"`
          petClinicVisitsSvcUserManagedIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.petClinicVisitsSvcUserManagedIdentityPrincipalId.value"`
          petClinicVisitsSvcUserManagedIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.petClinicVisitsSvcUserManagedIdentityClientId.value"`
          petClinicVisitsSvcDbUserName=`echo $deploymentOutput|jq ".properties.outputs.petClinicVisitsSvcDbUserName.value"`

          # agicIdentityResourceId=`echo $deploymentOutput|jq ".properties.outputs.agicIdentityResourceId.value"`
          # agicIdentityName=`echo $deploymentOutput|jq ".properties.outputs.agicIdentityName.value"`
          # agicIdentityPrincipalId=`echo $deploymentOutput|jq ".properties.outputs.agicIdentityPrincipalId.value"`
          # agicIdentityClientId=`echo $deploymentOutput|jq ".properties.outputs.agicIdentityClientId.value"`

          echo "TODO_APP_USER_MI_NAME: ${todoAppUserManagedIdentityName}"
          echo "TODO_APP_USER_MI_NAME=${todoAppUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "TODO_APP_USER_MI_PRINCIPAL_ID: ${todoAppUserManagedIdentityPrincipalId}"
          echo "TODO_APP_USER_MI_PRINCIPAL_ID=${todoAppUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "TODO_APP_USER_MI_CLIENT_ID: ${todoAppUserManagedIdentityClientId}"
          echo "TODO_APP_USER_MI_CLIENT_ID=${todoAppUserManagedIdentityClientId}" >> $GITHUB_OUTPUT
          echo "TODO_APP_DB_USER_NAME: ${todoAppDbUserName}"
          echo "TODO_APP_DB_USER_NAME=${todoAppDbUserName}" >> $GITHUB_OUTPUT

          echo "PET_CLINIC_APP_USER_MI_NAME: ${petClinicAppUserManagedIdentityName}"
          echo "PET_CLINIC_APP_USER_MI_NAME=${petClinicAppUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_APP_USER_MI_PRINCIPAL_ID: ${petClinicAppUserManagedIdentityPrincipalId}"
          echo "PET_CLINIC_APP_USER_MI_PRINCIPAL_ID=${petClinicAppUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_APP_USER_MI_CLIENT_ID: ${petClinicAppUserManagedIdentityClientId}"
          echo "PET_CLINIC_APP_USER_MI_CLIENT_ID=${petClinicAppUserManagedIdentityClientId}" >> $GITHUB_OUTPUT

          echo "PET_CLINIC_CONFIG_SVC_USER_MI_NAME: ${petClinicConfigSvcUserManagedIdentityName}"
          echo "PET_CLINIC_CONFIG_SVC_USER_MI_NAME=${petClinicConfigSvcUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_CONFIG_SVC_USER_MI_PRINCIPAL_ID: ${petClinicConfigSvcUserManagedIdentityPrincipalId}"
          echo "PET_CLINIC_CONFIG_SVC_USER_MI_PRINCIPAL_ID=${petClinicConfigSvcUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_CONFIG_SVC_USER_MI_CLIENT_ID: ${petClinicConfigSvcUserManagedIdentityClientId}"
          echo "PET_CLINIC_CONFIG_SVC_USER_MI_CLIENT_ID=${petClinicConfigSvcUserManagedIdentityClientId}" >> $GITHUB_OUTPUT

          echo "PET_CLINIC_CUSTS_SVC_USER_MI_NAME: ${petClinicCustsSvcUserManagedIdentityName}"
          echo "PET_CLINIC_CUSTS_SVC_USER_MI_NAME=${petClinicCustsSvcUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_CUSTS_SVC_USER_MI_PRINCIPAL_ID: ${petClinicCustsSvcUserManagedIdentityPrincipalId}"
          echo "PET_CLINIC_CUSTS_SVC_USER_MI_PRINCIPAL_ID=${petClinicCustsSvcUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_CUSTS_SVC_USER_MI_CLIENT_ID: ${petClinicCustsSvcUserManagedIdentityClientId}"
          echo "PET_CLINIC_CUSTS_SVC_USER_MI_CLIENT_ID=${petClinicCustsSvcUserManagedIdentityClientId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_CUSTS_SVC_DB_USER_NAME: ${petClinicCustsSvcDbUserName}"
          echo "PET_CLINIC_CUSTS_SVC_DB_USER_NAME=${petClinicCustsSvcDbUserName}" >> $GITHUB_OUTPUT

          echo "PET_CLINIC_VETS_SVC_USER_MI_NAME: ${petClinicVetsSvcUserManagedIdentityName}"
          echo "PET_CLINIC_VETS_SVC_USER_MI_NAME=${petClinicVetsSvcUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VETS_SVC_USER_MI_PRINCIPAL_ID: ${petClinicVetsSvcUserManagedIdentityPrincipalId}"
          echo "PET_CLINIC_VETS_SVC_USER_MI_PRINCIPAL_ID=${petClinicVetsSvcUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VETS_SVC_USER_MI_CLIENT_ID: ${petClinicVetsSvcUserManagedIdentityClientId}"
          echo "PET_CLINIC_VETS_SVC_USER_MI_CLIENT_ID=${petClinicVetsSvcUserManagedIdentityClientId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VETS_SVC_DB_USER_NAME: ${petClinicVetsSvcDbUserName}"
          echo "PET_CLINIC_VETS_SVC_DB_USER_NAME=${petClinicVetsSvcDbUserName}" >> $GITHUB_OUTPUT

          echo "PET_CLINIC_VISITS_SVC_USER_MI_NAME: ${petClinicVisitsSvcUserManagedIdentityName}"
          echo "PET_CLINIC_VISITS_SVC_USER_MI_NAME=${petClinicVisitsSvcUserManagedIdentityName}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VISITS_SVC_USER_MI_PRINCIPAL_ID: ${petClinicVisitsSvcUserManagedIdentityPrincipalId}"
          echo "PET_CLINIC_VISITS_SVC_USER_MI_PRINCIPAL_ID=${petClinicVisitsSvcUserManagedIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VISITS_SVC_USER_MI_CLIENT_ID: ${petClinicVisitsSvcUserManagedIdentityClientId}"
          echo "PET_CLINIC_VISITS_SVC_USER_MI_CLIENT_ID=${petClinicVisitsSvcUserManagedIdentityClientId}" >> $GITHUB_OUTPUT
          echo "PET_CLINIC_VISITS_SVC_DB_USER_NAME: ${petClinicVisitsSvcDbUserName}"
          echo "PET_CLINIC_VISITS_SVC_DB_USER_NAME=${petClinicVisitsSvcDbUserName}" >> $GITHUB_OUTPUT
      
          echo "APP_GATEWAY_NAME: ${appGatewayName}"
          echo "APP_GATEWAY_NAME=${appGatewayName}" >> $GITHUB_OUTPUT
          echo "APP_GATEWAY_IDENTITY_RESOURCE_ID: ${appGatewayIdentityResourceId}"
          echo "APP_GATEWAY_IDENTITY_RESOURCE_ID=${appGatewayIdentityResourceId}" >> $GITHUB_OUTPUT
          echo "APP_GATEWAY_IDENTITY_NAME: ${appGatewayIdentityName}"
          echo "APP_GATEWAY_IDENTITY_NAME=${appGatewayIdentityName}" >> $GITHUB_OUTPUT
          echo "APP_GATEWAY_IDENTITY_PRINCIPAL_ID: ${appGatewayIdentityPrincipalId}"
          echo "APP_GATEWAY_IDENTITY_PRINCIPAL_ID=${appGatewayIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "APP_GATEWAY_IDENTITY_CLIENT_ID: ${appGatewayIdentityClientId}"
          echo "APP_GATEWAY_IDENTITY_CLIENT_ID=${appGatewayIdentityClientId}" >> $GITHUB_OUTPUT

          echo "AGIC_IDENTITY_RESOURCE_ID: ${agicIdentityResourceId}"
          echo "AGIC_IDENTITY_RESOURCE_ID=${agicIdentityResourceId}" >> $GITHUB_OUTPUT
          echo "AGIC_IDENTITY_NAME: ${agicIdentityName}"
          echo "AGIC_IDENTITY_NAME=${agicIdentityName}" >> $GITHUB_OUTPUT
          echo "AGIC_IDENTITY_PRINCIPAL_ID: ${agicIdentityPrincipalId}"
          echo "AGIC_IDENTITY_PRINCIPAL_ID=${agicIdentityPrincipalId}" >> $GITHUB_OUTPUT
          echo "AGIC_IDENTITY_CLIENT_ID: ${agicIdentityClientId}"
          echo "AGIC_IDENTITY_CLIENT_ID=${agicIdentityClientId}" >> $GITHUB_OUTPUT
